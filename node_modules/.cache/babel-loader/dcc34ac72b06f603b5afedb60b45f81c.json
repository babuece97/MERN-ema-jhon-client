{"ast":null,"code":"var _jsxFileName = \"/Users/shameemaafroz/Desktop/Mission22/PH5/MERN-ema-john/ema-john-client/src/components/Shop/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useProducts from '../../hooks/useProducts';\nimport { addToDb, getStoredCart } from '../../utilities/fakedb';\nimport Cart from '../Cart/Cart';\nimport Product from '../Product/Product';\nimport './Shop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  _s();\n\n  const [products, setProducts] = useProducts();\n  const [cart, setCart] = useState([]);\n  const [page, setPage] = useState(0); // for spoting page\n  //  PAGE COUNT\n\n  const [pageCount, setPageCount] = useState(0);\n  useEffect(() => {\n    fetch('http://localhost:5000/productCount').then(res => res.json()).then(data => {\n      const count = data.count; // here data is obj\n\n      const pages = Math.ceil(count / 15);\n      setPageCount(pages);\n    });\n  }, []);\n  useEffect(() => {\n    const storedCart = getStoredCart();\n    const savedCart = [];\n\n    for (const id in storedCart) {\n      const addedProduct = products.find(product => product._id === id);\n\n      if (addedProduct) {\n        const quantity = storedCart[id];\n        addedProduct.quantity = quantity;\n        savedCart.push(addedProduct);\n      }\n    }\n\n    setCart(savedCart);\n  }, [products]);\n\n  const handleAddToCart = selectedProduct => {\n    console.log(selectedProduct);\n    let newCart = [];\n    const exists = cart.find(product => product._id === selectedProduct._id);\n\n    if (!exists) {\n      selectedProduct.quantity = 1;\n      newCart = [...cart, selectedProduct];\n    } else {\n      const rest = cart.filter(product => product._id !== selectedProduct._id);\n      exists.quantity = exists.quantity + 1;\n      newCart = [...rest, exists];\n    }\n\n    setCart(newCart);\n    addToDb(selectedProduct._id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-container\",\n      children: [products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product,\n        handleAddToCart: handleAddToCart\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 43\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [...Array(pageCount).keys()].map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(number),\n          children: [\" \", number + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: /*#__PURE__*/_jsxDEV(Cart, {\n        cart: cart,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/orders\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Review Order \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"mh6mWP8MdWJpljFdAo+gNwDN04s=\", false, function () {\n  return [useProducts];\n});\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/Users/shameemaafroz/Desktop/Mission22/PH5/MERN-ema-john/ema-john-client/src/components/Shop/Shop.js"],"names":["React","useEffect","useState","Link","useProducts","addToDb","getStoredCart","Cart","Product","Shop","products","setProducts","cart","setCart","page","setPage","pageCount","setPageCount","fetch","then","res","json","data","count","pages","Math","ceil","storedCart","savedCart","id","addedProduct","find","product","_id","quantity","push","handleAddToCart","selectedProduct","console","log","newCart","exists","rest","filter","map","Array","keys","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useProducts from '../../hooks/useProducts';\nimport { addToDb, getStoredCart } from '../../utilities/fakedb';\nimport Cart from '../Cart/Cart';\nimport Product from '../Product/Product';\nimport './Shop.css';\n\nconst Shop = () => {\n    const [products, setProducts] = useProducts();\n    const [cart, setCart] = useState([]);\n    const [page,setPage]=useState(0); // for spoting page\n\n        //  PAGE COUNT\n    const [pageCount, setPageCount] = useState(0);\n    useEffect( () =>{\n        fetch('http://localhost:5000/productCount')\n        .then(res => res.json())\n        .then(data =>{\n            const count = data.count; // here data is obj\n            const pages = Math.ceil(count/15);\n            setPageCount(pages);\n        })\n    }, [])\n\n    useEffect( () =>{\n        const storedCart = getStoredCart();\n        const savedCart = [];\n        for(const id in storedCart){\n            const addedProduct = products.find(product => product._id === id);\n            if(addedProduct){\n                const quantity = storedCart[id];\n                addedProduct.quantity = quantity;\n                savedCart.push(addedProduct);\n            }\n        }\n        setCart(savedCart);\n    }, [products])\n\n    const handleAddToCart = (selectedProduct) =>{\n        console.log(selectedProduct);\n        let newCart = [];\n        const exists = cart.find(product => product._id === selectedProduct._id);\n        if(!exists){\n            selectedProduct.quantity = 1;\n            newCart = [...cart, selectedProduct];\n        }\n        else{\n            const rest = cart.filter(product => product._id !== selectedProduct._id);\n            exists.quantity = exists.quantity + 1;\n            newCart = [...rest, exists];\n        }\n        \n        setCart(newCart);\n        addToDb(selectedProduct._id);\n    }\n\n    return (\n        <div className='shop-container'>\n            <div className=\"products-container\">\n                {\n                    products.map(product=><Product \n                        key={product._id}\n                        product={product}\n                        handleAddToCart={handleAddToCart}\n                        ></Product>)\n                }\n                {/* // BUTTON PAGINATION  */}\n                <div className=\"pagination\">\n                    {\n                        [...Array(pageCount).keys()]\n                        .map(number=> <button \n                            onClick={()=>setPage(number)}\n                            > {number+1}</button>)\n                    }\n                </div>\n            </div>\n            <div className=\"cart-container\">\n                <Cart cart={cart}>\n                    <Link to=\"/orders\">\n                        <button>Review Order </button>\n                    </Link>\n                </Cart>\n            </div>\n        </div>\n    );\n};\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}