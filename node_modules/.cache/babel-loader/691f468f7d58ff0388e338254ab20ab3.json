{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getStoredCart } from \"../utilities/fakedb\";\n\nconst useCart = products => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    const storedCart = getStoredCart();\n    const savedCart = [];\n\n    for (const id in storedCart) {\n      const addedProduct = products.find(product => product._id === id);\n\n      if (addedProduct) {\n        const quantity = storedCart[id];\n        addedProduct.quantity = quantity;\n        savedCart.push(addedProduct);\n      }\n    }\n\n    setCart(savedCart);\n  }, [products]);\n  return [cart, setCart];\n};\n\n_s(useCart, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n\nexport default useCart;","map":{"version":3,"sources":["/Users/shameemaafroz/Desktop/Mission22/PH5/MERN-ema-john/ema-john-client/src/hooks/useCart.js"],"names":["useEffect","useState","getStoredCart","useCart","products","cart","setCart","storedCart","savedCart","id","addedProduct","find","product","_id","quantity","push"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAE,MAAK;AACZ,UAAMO,UAAU,GAAGL,aAAa,EAAhC;AACA,UAAMM,SAAS,GAAG,EAAlB;;AACA,SAAI,MAAMC,EAAV,IAAgBF,UAAhB,EAA2B;AACvB,YAAMG,YAAY,GAAGN,QAAQ,CAACO,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBJ,EAAzC,CAArB;;AACA,UAAGC,YAAH,EAAgB;AACZ,cAAMI,QAAQ,GAAGP,UAAU,CAACE,EAAD,CAA3B;AACAC,QAAAA,YAAY,CAACI,QAAb,GAAwBA,QAAxB;AACAN,QAAAA,SAAS,CAACO,IAAV,CAAeL,YAAf;AACH;AACJ;;AACDJ,IAAAA,OAAO,CAACE,SAAD,CAAP;AACH,GAZQ,EAYN,CAACJ,QAAD,CAZM,CAAT;AAcA,SAAO,CAACC,IAAD,EAAOC,OAAP,CAAP;AACH,CAlBD;;GAAMH,O;;AAoBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getStoredCart } from \"../utilities/fakedb\";\n\nconst useCart = (products) => {\n    const [cart, setCart] = useState([]);\n\n    useEffect( () =>{\n        const storedCart = getStoredCart();\n        const savedCart = [];\n        for(const id in storedCart){\n            const addedProduct = products.find(product => product._id === id);\n            if(addedProduct){\n                const quantity = storedCart[id];\n                addedProduct.quantity = quantity;\n                savedCart.push(addedProduct);\n            }\n        }\n        setCart(savedCart);\n    }, [products]);\n    \n    return [cart, setCart];\n}\n\nexport default useCart;"]},"metadata":{},"sourceType":"module"}